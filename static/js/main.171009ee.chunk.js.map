{"version":3,"sources":["components/Footer.tsx","components/Hero.tsx","components/NavBar.tsx","components/Carousel.tsx","components/Heading.tsx","components/Section.tsx","components/SubHeading.tsx","components/VisibilitySensor.tsx","components/Projects.tsx","components/About.tsx","components/ContactForm.tsx","components/Map.tsx","components/Contact.tsx","components/Social.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Wrapper","styled","footer","Author","div","Footer","HeroWrapper","Overlay","HeroImg","img","HeroVideo","video","Row","DownArrow","Title","Subtitle","SmallTagline","OverlayContent","Hero","resize","forceUpdate","isSmallWindow","userAgent","navigator","innerWidth","window","match","addEventListener","this","removeEventListener","src","alt","id","autoPlay","loop","type","strings","typeSpeed","showCursor","Component","NavBar","Navbar","bg","expand","sticky","Brand","href","Toggle","Collapse","className","Nav","Link","Slider","projects","map","imgSrc","altText","data-src","key","HeadingText","h1","Heading","text","SectionWrapper","Section","children","SubHeadingText","h3","SubHeading","VisibilitySensor","props","state","active","once","otherProps","partialVisibility","onChange","isVisible","setState","defaultProps","ProjectCategory","websiteData","url","layoverText","appData","WebProjects","delay","to","opacity","style","MobileProjects","Projects","ColumnThird","Spacing","LargerSpacing","SkillHeadingBox","SkillsGrouping","SkillColumn","colHeading","colRows","About","Input","input","TextArea","textarea","ContactForm","name","email","message","handleChange","bind","handleSubmit","event","target","placeholder","value","alert","preventDefault","onSubmit","rows","Map","renderMarkers","maps","Marker","position","lat","center","lng","title","bootstrapURLKeys","defaultCenter","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","ContactContainer","MapContainer","FormContainer","Contact","onLine","SocialNavbar","SocialImg","SocialSpacing","a","SocialOption","imgUrl","rel","data","Social","Main","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.171009ee.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrapper = styled.footer`\n    background-color: #2f2f2f;\n    width: 100%;\n    color: #ffffff;\n    text-align: center;\n    margin-top: 50px;\n`;\n\nconst Author = styled.div`\n    padding: 30px;\n`;\n\nexport const Footer = () => {\n    return (\n        <Wrapper>\n            <Author>\n                &copy; Jeremy Fu 2020\n            </Author>\n        </Wrapper>\n    );\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Typed from 'react-typed';\nconst swan = './resources/swan.jpg';\n\nconst HeroWrapper = styled.div`\n    position: relative;\n`;\n\nconst Overlay = styled.div`\n    background-color: rgba(0,0,0,0.1);\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    text-align: center;\n    color: #ffffff;\n`;\n\nconst HeroImg = styled.img`\n    max-width: 100%;\n`;\n\nconst HeroVideo = styled.video`\n    height: auto;\n    vertical-align: middle;\n    width: 100%;\n`;\n\nconst Row = styled.div`\n    width: 100%;\n`;\n\nconst DownArrow = styled.img`\n    border-radius: 50%;\n    height: 80px;\n    width: 80px;\n`;\n\nconst Title = styled.div`\n    font-size: 4em;\n`;\n\nconst Subtitle = styled.div`\n    font-size: 2.5em;\n`;\n\nconst SmallTagline = styled.div`\n    height: 21px;\n    font-size:15px;\n`;\n\nconst OverlayContent = styled.div`\n    height: 70%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    text-align: center;\n`;\n\nexport class Hero extends Component {\n    resize = () => this.forceUpdate()\n\n    isSmallWindow = () => {\n        const { userAgent } = navigator;\n        const { innerWidth } = window;\n\n        return userAgent.match(/(iPhone|Android)/i) || innerWidth < 650;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resize)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    render() {\n        return (\n            <HeroWrapper>\n                { \n                    this.isSmallWindow() ?\n                    <HeroImg src={swan} alt=\"swan\" /> : \n                    <HeroVideo id = \"video\" autoPlay loop>\n                        <source src=\"resources/swan.mp4\" type=\"video/mp4\" />\n                    </HeroVideo>\n                }\n                <Overlay>\n                    <OverlayContent>\n                        <Row>\n                            <Title>Jeremy Fu</Title>\n                        </Row>\n                        <Row>\n                            <Subtitle>\n                                <Typed\n                                    strings={[\"I am a:^500 developer\"]}\n                                    typeSpeed={40}\n                                    showCursor={false}\n                                />\n                            </Subtitle>\n                        </Row>\n                        <Row id=\"godown\">\n                            {/* <a href=\"javascript:;\"> */}\n                            <DownArrow src=\"resources/down-arrow.png\" alt=\"Down arrow\" />\n                            {/* </a> */}\n                        </Row>\n                        <Row>\n                            <SmallTagline>\n                                <Typed\n                                    strings={[\"^2000 Welcome! Check out some of my work below :)\"]}\n                                    typeSpeed={40}\n                                    showCursor={false}\n                                />\n                            </SmallTagline>\n                        </Row>\n                    </OverlayContent>\n                </Overlay>\n            </HeroWrapper>\n        );\n    }\n}","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\n\nexport const NavBar = () => (\n    <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand href=\"#home\">Jeremy Fu</Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n            <Nav>\n                <Nav.Link href=\"#project\">Work</Nav.Link>\n                <Nav.Link href=\"#about\">About</Nav.Link>\n                <Nav.Link href=\"#contact\">Contact</Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n)","import React from \"react\";\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/src/styles.js';\n\nexport const Slider = ({projects}: any) => (\n  <AwesomeSlider>\n      {\n          projects.map(({imgSrc, altText}: any) => (\n            <div data-src={imgSrc} key={altText} />\n          ))\n      }\n  </AwesomeSlider>\n);","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeadingText = styled.h1`\n    text-align: center;\n    color: #aaaaaa; \n`;\n\nexport const Heading = ({ text }: { text: string}) => (\n    <HeadingText>{text}</HeadingText>\n)","import React from 'react';\nimport styled from 'styled-components';\n\nexport const SectionWrapper = styled.div`\n    text-align: center;\n    padding-top: 60px;\n`;\n\nexport const Section = ({ id, children }: { id: string, children: JSX.Element }) => (\n    <SectionWrapper id={id}>\n        {children}\n    </SectionWrapper>\n)","import React from 'react';\nimport styled from 'styled-components';\n\nconst SubHeadingText = styled.h3`\n    color: #aaaaaa;\n    margin-bottom: 1%;\n    padding-top: 3%;\n    text-align: center;\n`;\n\nexport const SubHeading = ({ text }: { text: string}) => (\n    <SubHeadingText>{text}</SubHeadingText>\n)","/* eslint-disable react/no-typos */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport VSensor from \"react-visibility-sensor\";\n\nclass VisibilitySensor extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      active: true\n    };\n  }\n\n  render() {\n    const { active } = this.state;\n    const { once, children, ...otherProps } = this.props;\n    return (\n      <VSensor\n        partialVisibility={true}\n        active={active}\n        onChange={isVisible => {\n          once &&\n            isVisible &&\n            this.setState({ active: false }, () =>\n              {}\n            );\n        }}\n        {...otherProps}\n      >\n        {({ isVisible }) => {\n            // @ts-ignore\n            return children({ isVisible })}\n        }\n      </VSensor>\n    );\n  }\n}\n\n// @ts-ignore\nVisibilitySensor.propTypes = {\n  children: PropTypes.func.isRequired,\n  once: PropTypes.bool\n};\n\n// @ts-ignore\nVisibilitySensor.defaultProps = {\n  once: false\n};\n\nexport default VisibilitySensor;\n","import React from 'react';\nimport { Spring } from \"react-spring/renderprops\";\nimport styled from 'styled-components';\nimport { Slider } from './Carousel';\nimport { Heading } from './Heading';\nimport { Section } from './Section';\nimport { SubHeading } from './SubHeading';\nimport VisibilitySensor from \"./VisibilitySensor\";\n\nconst ProjectCategory = styled.div`\n    clear: both;\n`;\n\nconst websiteData = [\n    {\n        url: \"https://internationalaom.com/\",\n        imgSrc: \"./resources/piano.png\",\n        layoverText: \"INTERNATIONAL AOM\",\n        altText: \"Piano teaching website\",\n    },\n    {\n        url: \"http://kiyobox.storenvy.com/\",\n        imgSrc: \"./resources/kiyo.png\",\n        layoverText: \"KIYO BOX\",\n        altText: \"Cosmetics website\",\n    },\n    {\n        url: \"https://www.alphatime.co/\",\n        imgSrc: \"./resources/alpha.png\",\n        layoverText: \"ALPHA TIME\",\n        altText: \"Dating coaching website\",\n    },\n    {\n        url: \"http://businessoneconsulting.org/\",\n        imgSrc: \"./resources/businessone.png\",\n        layoverText: \"BUSINESSONE CONSULTING UNSW\",\n        altText: \"UNSW BusinessOne website\",\n    },\n    {\n        url: \"http://unswbsoc.com/\",\n        imgSrc: \"./resources/bsoc.png\",\n        layoverText: \"BUSINESS SOCIETY UNSW\",\n        altText: \"UNSW business society website\",\n    },\n    {\n        url: \"\",\n        imgSrc: \"./resources/worldhax.png\",\n        layoverText: \"WORLDHAX BLOG Site No Longer Running\",\n        altText: \"Life blog website\",\n    },\n    {\n        url: \"http://www.gowntown.com.au/cufflinks/\",\n        imgSrc: \"./resources/gowntown.png\",\n        layoverText: \"GOWNTOWN\",\n        altText: \"Gowntown website\",\n    }\n];\n\nconst appData = [\n    {\n        url: \"https://itunes.apple.com/in/app/pocket-journal/id1078544961?mt=8\",\n        imgSrc: \"./resources/journal.png\",\n        layoverText: \"POCKET JOURNAL\",\n        altText: \"Journal app\",\n    },\n    {\n        url: \"https://itunes.apple.com/in/app/night-fx/id1083457773?mt=8\",\n        imgSrc: \"./resources/nightfx.png\",\n        layoverText: \"NIGHT FX\",\n        altText: \"Nightfx app\",\n    }\n];\n\nconst WebProjects = () => (\n    <VisibilitySensor once>\n        {({ isVisible }: any) => (\n            <Spring delay={500} to={{ opacity: isVisible ? 1 : 0 }}>\n                {({ opacity }) => \n                    <ProjectCategory style={{ opacity }}>\n                        <SubHeading text=\"Websites\" />\n                        <Slider projects={websiteData} />\n                    </ProjectCategory>\n                }\n            </Spring>\n        )}\n    </VisibilitySensor>\n)\n\nconst MobileProjects = () => (\n    <VisibilitySensor once>\n        {({ isVisible }: any) => (\n            <Spring delay={500} to={{ opacity: isVisible ? 1 : 0 }}>\n                {({ opacity }) => \n                    <ProjectCategory style={{ opacity }}>\n                        <SubHeading text=\"Mobile apps\" />\n                        <Slider projects={appData} />\n                    </ProjectCategory>\n                }\n            </Spring>\n        )}\n    </VisibilitySensor>\n)\n\nexport const Projects = () => (\n    <Section id=\"project\">\n        <>\n            <Heading text=\"Projects\" />\n            <WebProjects />\n            <MobileProjects />\n        </>\n    </Section>\n);","import React from 'react';\nimport { Spring } from \"react-spring/renderprops\";\nimport styled from 'styled-components';\nimport { Heading } from './Heading';\nimport { Section } from './Section';\nimport VisibilitySensor from \"./VisibilitySensor\";\n\nconst ColumnThird = styled.div`\n    min-height: 1px;\n    width: 30%;\n`;\n\nconst Spacing = styled.div`\n    padding-top: 15px;\n`;\n\nconst LargerSpacing = styled.div`\n    padding-top: 30px;\n`;\n\nconst SkillHeadingBox = styled.div`\n    background: #9A8E5E;\n    text-align: center;\n    padding: 17px 0;\n    width: 100%;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    color: #fff;\n`;\n\nconst SkillsGrouping = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    align-content: center;\n    margin-top: 50px;\n`;\n\nconst SkillColumn = ({ colHeading, colRows }: { colHeading: string, colRows: Array<string> }) => (\n    <ColumnThird>\n        <SkillHeadingBox>\n            {colHeading}\n        </SkillHeadingBox>\n        <Spacing />\n        {\n            colRows.map(text => (\n                <p key={text}>{text}</p>\n            ))\n        }\n    </ColumnThird>\n);\n\nexport const About = () => (\n    <VisibilitySensor once>\n        {({ isVisible }: any) => (\n            <Spring delay={500} to={{ opacity: isVisible ? 1 : 0 }}>\n                {({ opacity }) => \n                    <Section id=\"about\">\n                        <div style={{ opacity }}>\n                            <Heading text=\"About\" />\n                            <LargerSpacing />\n                            <p>Current software engineer at Facebook. Formerly worked at Instagram, Atlassian. Worked in front-end, back-end and platform roles. I'm friendly, punctual, and willing to take on a wide range of different projects.</p>\n                            <SkillsGrouping>\n                                <SkillColumn colHeading=\"Web\" colRows={[\"HTML & CSS & Jquery\", \"NodeJS & ReactJS\", \"Wordpress\"]} />\n                                <SkillColumn colHeading=\"Mobile\" colRows={[\"Android Development with Java\", \"iOS Development with Swift\"]} />\n                                <SkillColumn colHeading=\"Software\" colRows={[\"C & Java\"]} />\n                            </SkillsGrouping>\n                        </div>\n                    </Section>\n                }\n            </Spring>\n\n        )}\n    </VisibilitySensor>\n);","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {};\n\ntype State = {\n    name: string,\n    email: string,\n    message: string,\n};\n\nconst Input = styled.input`\n    width: 100%;\n    display: block;\n    height: 34px;\n    padding: 6px 12px;\n    font-size: 14px;\n    line-height: 1.42857143;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    margin-bottom: 15px;\n`;\n\nconst TextArea = styled.textarea`\n    width: 100%;\n    display: block;\n    padding: 6px 12px;\n    font-size: 14px;\n    line-height: 1.42857143;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    margin-bottom: 15px;\n`;\n\nconst NAME_PLACEHOLDER = 'Name';\nconst EMAIL = 'Email Address';\nconst MESSAGE = 'Send me a message';\n\nexport class ContactForm extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event: any) {\n        switch (event.target.placeholder) {\n            case NAME_PLACEHOLDER:\n                this.setState({\n                    name: event.target.value\n                });\n                break;\n            case EMAIL:\n                this.setState({\n                    email: event.target.value\n                });\n                break;\n            case MESSAGE:\n                this.setState({\n                    message: event.target.value\n                });\n        }\n    }\n  \n    handleSubmit(event: any) {\n        alert('A name was submitted: ' + this.state.name);\n        event.preventDefault();\n    }\n  \n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <Input type=\"text\" value={this.state.name} onChange={this.handleChange} placeholder={\"Name\"} />\n                <Input type=\"text\" value={this.state.email} onChange={this.handleChange} placeholder={\"Email Address\"} />\n                <TextArea rows={5} value={this.state.message} onChange={this.handleChange} placeholder={\"Send me a message\"} />\n\n                <Input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\ntype Props = {\n    center: {\n        lat: number,\n        lng: number,\n    },\n    zoom: number,\n};\n\nexport class Map extends Component<Props> {\n    static defaultProps = {\n        center: {\n            lat: -33.87,\n            lng: 151.21,\n        },\n        zoom: 11,\n    };\n\n    renderMarkers = (map: any, maps: any) => {\n        let marker = new maps.Marker(\n            {\n                position: { lat: this.props.center.lat, lng: this.props.center.lng },\n                map,\n                title: 'Hello World!'\n            }\n        );\n        return marker;\n    };\n\n    render() {\n        return (\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyDVVuiFRsGxb3A57LQ6rCxpcCV6BR-4bKM' }}\n                defaultCenter={this.props.center}\n                defaultZoom={this.props.zoom}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map, maps }) => this.renderMarkers(map, maps)}\n            />\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Spring } from \"react-spring/renderprops\";\nimport styled from 'styled-components';\nimport { ContactForm } from './ContactForm';\nimport { Heading } from './Heading';\nimport { Map } from './Map';\nimport { Section } from './Section';\nimport VisibilitySensor from \"./VisibilitySensor\";\n\nconst ContactContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    text-align: center;\n`;\n\nconst MapContainer = styled.div`\n    height: 50vh;\n    width: 40%;\n`;\n\nconst FormContainer = styled.div`\n    width: 50%;\n`;\n\nexport class Contact extends Component {\n    resize = () => this.forceUpdate()\n\n    isSmallWindow = () => {\n        const { userAgent } = navigator;\n        const { innerWidth } = window;\n\n        return userAgent.match(/(iPhone|Android)/i) || innerWidth < 1100;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resize)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    render() {\n        return (\n            <VisibilitySensor once>\n                {({ isVisible }: any) => (\n                    <Spring delay={500} to={{ opacity: isVisible ? 1 : 0 }}>\n                        {({ opacity }) => \n                            <Section id=\"contact\">\n                                <div style={{ opacity }}>\n                                    <Heading text=\"Contact\" />\n                                    <ContactContainer>\n                                        {\n                                            // Throws an error if client is not connected to the internet\n                                            !this.isSmallWindow() && window.navigator.onLine  &&\n                                            <MapContainer>\n                                                <Map />\n                                            </MapContainer>\n                                        }\n                                        <FormContainer>\n                                            <ContactForm />\n                                        </FormContainer>\n                                    </ContactContainer>\n                                </div>\n                            </Section>\n                        }\n                    </Spring>\n                )}\n            </VisibilitySensor>\n        );\n    }\n};","import React from 'react';\nimport styled from 'styled-components';\n\nconst SocialNavbar = styled.div`\n    position: fixed;\n    bottom: 2%;\n    right: 2%; \n    z-index: 1; \n`;\n\nconst SocialImg = styled.img`\n    height: 40px;\n    width: 40px;\n`;\n\nconst SocialSpacing = styled.a`\n    marginRight: 15px;\n`;\n\nconst SocialOption = ({ url, imgUrl, altText }: { url: string, imgUrl: string, altText: string}) => (\n    <SocialSpacing href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <SocialImg src={imgUrl} alt={altText} />\n    </SocialSpacing>\n);\n\nconst data = [\n    {\n        url: \"https://github.com/imjeremyhi\",\n        imgUrl: \"resources/github.png\",\n        altText: \"Github link\",\n    },\n    {\n        url: \"https://au.linkedin.com/in/jeremyfu\",\n        imgUrl: \"resources/linkedin.png\",\n        altText: \"Linkedin link\",\n    },\n    {\n        url: \"mailto:imjeremyhi@gmail.com\",\n        imgUrl: \"resources/gmail.png\",\n        altText: \"Gmail link\",\n    },\n];\n\nexport const Social = () => {\n    return (\n        <SocialNavbar>\n            {\n                data.map(({url, imgUrl, altText}) => (\n                    <SocialOption url={url} imgUrl={imgUrl} altText={altText} key={altText} />\n                ))\n            }\n        </SocialNavbar>\n    );\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Footer } from './components/Footer';\nimport { Hero } from './components/Hero';\nimport { NavBar } from './components/NavBar';\nimport { Projects } from './components/Projects';\nimport { About } from './components/About';\nimport { Contact } from './components/Contact';\nimport { Social } from './components/Social';\n\nconst Main = styled.div`\n  font-family: 'Roboto', sans-serif;\n  background-color: #EDF1F5;\n`;\n\nexport class App extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.divToFocus = React.createRef();\n  // }\n\n  // handleDownClick = event => {\n  //   if(this.divToFocus.current){\n  //       this.divToFocus.current.scrollIntoView({ \n  //          behavior: \"smooth\", \n  //          block: \"nearest\"\n  //       })\n  //   }\n  // }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n      <Main>\n        {/* <Hero handleClick={this.handleDownClick} />\n        <Skills ref={this.divToFocus} /> */}\n        <NavBar />\n        <Hero />\n        <Projects />\n        <About />\n        <Contact />\n        <Footer />\n        <Social />\n      </Main>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}