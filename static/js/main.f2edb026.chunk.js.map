{"version":3,"sources":["components/Footer.tsx","components/Hero.tsx","components/Heading.tsx","components/Section.tsx","components/SubHeading.tsx","components/Projects.tsx","components/Skills.tsx","components/Social.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["Wrapper","styled","footer","Author","p","Footer","className","HeroWrapper","section","DownArrow","img","Hero","id","autoPlay","loop","src","type","href","alt","HeadingText","h1","Heading","text","SectionWrapper","div","Section","children","SubHeadingText","h3","SubHeading","ProjectCategory","ProjectContainer","url","imgSrc","layoverText","altText","target","rel","style","paddingLeft","paddingRight","PhoneContainer","WebsiteContainer","websiteData","appData","Projects","map","key","CenteredText","WhiteText","span","SkillColumn","colHeading","colRows","Skills","marginTop","SocialNavbar","SocialImg","SocialSpacing","a","SocialOption","imgUrl","data","Social","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f2edb026.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrapper = styled.footer`\n    background-color: #2f2f2f;\n    bottom: 0;\n    position: relative;\n    width: 100%;\n`;\n\nconst Author = styled.p`\n    color: #ffffff;\n    padding-top: 5%;\n    text-align: center;\n`;\n\nexport const Footer = () => {\n    return (\n        <Wrapper>\n            <div className=\"container\">\n                <Author>\n                    &copy; Jeremy Fu 2016\n                </Author>\n            </div>\n        </Wrapper>\n    );\n}","import React from 'react';\nimport styled from 'styled-components'\nconst swan = './resources/swan.jpg';\n\nconst HeroWrapper = styled.section`\n    position: relative;  \n    height: 40em; \n    max-width: 100%;\n    background: url(${swan}) no-repeat center; \n    background-size: cover;\n    overflow: hidden;\n`;\n\nconst DownArrow = styled.img`\n    border-radius: 50%;\n    height: 80px;\n    width: 80px;\n`;\n\nexport const Hero = () => {\n    return (\n        <HeroWrapper id=\"home\">\n            <div id=\"vid-container\">\n                <video id = \"video\" autoPlay loop>\n                    <source src=\"resources/swan.mp4\" type=\"video/mp4\" />Your browser does not support the video tag. I suggest you upgrade your browser.\n                    <source src=\"resources/swan.mp4\" type=\"video/webm\" />Your browser does not support the video tag. I suggest you upgrade your browser.\n                </video>\n            </div>\n            <div className=\"vidcover\">\n                <div id=\"hero-title\">Jeremy Fu</div>\n                <div id =\"hero-subtitle\">\n                    <span id=\"rotate\" />\n                </div>\n                <div id=\"godown\">\n                    <a href=\"javascript:;\">\n                        <DownArrow src=\"resources/downarrow.PNG\" alt=\"Down arrow\" />\n                    </a>\n                </div>\n                <div id=\"tiny-text\"/>\t\t        \n            </div>\n        </HeroWrapper>\n    );\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeadingText = styled.h1`\n    text-align: center;\n    color: #aaaaaa; \n`;\n\nexport const Heading = ({ text }: { text: string}) => (\n    <HeadingText className=\"hideme\">{text}</HeadingText>\n)","import React from 'react';\nimport styled from 'styled-components';\n\nexport const SectionWrapper = styled.div`\n    padding-bottom: 3%;\n`;\n\nexport const Section = ({ id, children }: { id: string, children: JSX.Element }) => (\n    <SectionWrapper className=\"container\" id={id}>\n        {children}\n    </SectionWrapper>\n)","import React from 'react';\nimport styled from 'styled-components';\n\nconst SubHeadingText = styled.h3`\n    color: #aaaaaa;\n    marginBottom: 1%;\n    paddingTop: 3%;\n`;\n\nexport const SubHeading = ({ text }: { text: string}) => (\n    <SubHeadingText className=\"hideme\">{text}</SubHeadingText>\n)","import React from 'react';\nimport styled from 'styled-components';\nimport { Heading } from './Heading';\nimport { Section } from './Section';\nimport { SubHeading } from './SubHeading';\n\nconst ProjectCategory = styled.div`\n    clear: both;\n`;\n\nconst ProjectContainer = ({url, imgSrc, layoverText, altText}: {url: string, imgSrc: string, layoverText: string, altText: string})  => (\n    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={imgSrc} alt={altText} />\n        <div className=\"after\" style={{ paddingLeft: \"20%\", paddingRight: \"20%\" }}>{layoverText}</div>\n    </a>\n);\n\nconst PhoneContainer = ({url, imgSrc, layoverText, altText}: {url: string, imgSrc: string, layoverText: string, altText: string}) => (\n    <div className=\"image-phone-container\">\n        <ProjectContainer url={url} imgSrc={imgSrc} layoverText={layoverText} altText={altText} />\n    </div>\n);\n\nconst WebsiteContainer = ({url, imgSrc, layoverText, altText}: {url: string, imgSrc: string, layoverText: string, altText: string}) => (\n    <div className=\"image-container\">\n        <ProjectContainer url={url} imgSrc={imgSrc} layoverText={layoverText} altText={altText} />\n    </div>\n);\n\nconst websiteData = [\n    {\n        url: \"http://businessoneconsulting.org/\",\n        imgSrc: \"resources/businessone.PNG\",\n        layoverText: \"BUSINESSONE CONSULTING UNSW\",\n        altText: \"UNSW BusinessOne website\",\n    },\n    {\n        url: \"http://www.gowntown.com.au/cufflinks/\",\n        imgSrc: \"resources/gowntown.PNG\",\n        layoverText: \"GOWNTOWN\",\n        altText: \"Gowntown website\",\n    },\n    {\n        url: \"http://unswbsoc.com/\",\n        imgSrc: \"resources/bsoc.PNG\",\n        layoverText: \"BUSINESS SOCIETY UNSW\",\n        altText: \"UNSW business society website\",\n    },\n    {\n        url: \"\",\n        imgSrc: \"resources/worldhax.PNG\",\n        layoverText: \"WORLDHAX BLOG Site No Longer Running\",\n        altText: \"Life blog website\",\n    },\n    {\n        url: \"http://kiyobox.storenvy.com/\",\n        imgSrc: \"resources/kiyo.PNG\",\n        layoverText: \"KIYO BOX\",\n        altText: \"Cosmetics website\",\n    },\n    {\n        url: \"https://www.alphatime.co/\",\n        imgSrc: \"resources/alpha.PNG\",\n        layoverText: \"ALPHA TIME\",\n        altText: \"Dating coaching website\",\n    },\n    {\n        url: \"https://internationalaom.com/\",\n        imgSrc: \"resources/piano.PNG\",\n        layoverText: \"INTERNATIONAL AOM\",\n        altText: \"Piano teaching website\",\n    }\n];\n\nconst appData = [\n    {\n        url: \"https://itunes.apple.com/in/app/pocket-journal/id1078544961?mt=8\",\n        imgSrc: \"resources/journal.png\",\n        layoverText: \"POCKET JOURNAL\",\n        altText: \"Journal app\",\n    },\n    {\n        url: \"https://itunes.apple.com/in/app/night-fx/id1083457773?mt=8\",\n        imgSrc: \"resources/nightfx.png\",\n        layoverText: \"NIGHT FX\",\n        altText: \"Nightfx app\",\n    }\n];\n\nexport const Projects = () => (\n    <Section id=\"project\">\n        <>\n            <Heading text=\"Projects\" />\n            \n            <ProjectCategory>\n                <SubHeading text=\"Websites\" />\n                {\n                    websiteData.map(({url, imgSrc, layoverText, altText}) => (\n                        <WebsiteContainer url={url} imgSrc={imgSrc} layoverText={layoverText} altText={altText} key={altText} />\n                    ))\n                }\n            </ProjectCategory>\n            <ProjectCategory>\n                <SubHeading text=\"Mobile apps\" />\n                {\n                    appData.map(({url, imgSrc, layoverText, altText}) => (\n                        <PhoneContainer url={url} imgSrc={imgSrc} layoverText={layoverText} altText={altText} key={altText} />\n                    ))\n                }\n            </ProjectCategory>\n        </>\n    </Section>\n);","import React from 'react';\nimport styled from 'styled-components';\nimport { Heading } from './Heading';\nimport { Section } from './Section';\n\nconst CenteredText = styled.div`\n    text-align: center;\n`;\n\nconst WhiteText = styled.span`\n    color: #ffffff;\n`;\n\nconst SkillColumn = ({ colHeading, colRows }: { colHeading: string, colRows: Array<string> }) => (\n    <CenteredText className=\"col-xs-4\">\n        <button className=\"animbox animbox-icon hideme\">\n            <WhiteText className=\"hideme\">{colHeading}</WhiteText>\n        </button>\n        {\n            colRows.map(text => (\n                <p className=\"hideme\" key={text}>{text}</p>\n            ))\n        }\n    </CenteredText>\n);\n\nexport const Skills = () => {\n    return (\n        <Section id=\"about\">\n            <>\n                <Heading text=\"Programming Knowledge\" />\n                <div style={{ marginTop: \"6%\" }}>\n                    <SkillColumn colHeading=\"WEB\" colRows={[\"HTML & CSS & Jquery\", \"NodeJS & ReactJS\", \"Wordpress\"]} />\n                    <SkillColumn colHeading=\"MOBILE\" colRows={[\"Android Development with Java\", \"iOS Development with Swift\"]} />\n                    <SkillColumn colHeading=\"SOFTWARE\" colRows={[\"C & Java\"]} />\n                </div>\n            </>\n        </Section>\n    );\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst SocialNavbar = styled.div`\n    position: fixed;\n    bottom: 2%;\n    right: 2%; \n    z-index: 1; \n`;\n\nconst SocialImg = styled.img`\n    height: 40px;\n    width: 40px;\n`;\n\nconst SocialSpacing = styled.a`\n    marginRight: 15px;\n`;\n\nconst SocialOption = ({ url, imgUrl, altText }: { url: string, imgUrl: string, altText: string}) => (\n    <SocialSpacing href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <SocialImg src={imgUrl} alt={altText} />\n    </SocialSpacing>\n);\n\nconst data = [\n    {\n        url: \"https://github.com/imjeremyhi\",\n        imgUrl: \"resources/github.png\",\n        altText: \"Github link\",\n    },\n    {\n        url: \"https://au.linkedin.com/in/jeremyfu\",\n        imgUrl: \"resources/linkedin.png\",\n        altText: \"Linkedin link\",\n    },\n    {\n        url: \"mailto:imjeremyhi@gmail.com\",\n        imgUrl: \"resources/gmail.png\",\n        altText: \"Gmail link\",\n    },\n];\n\nexport const Social = () => {\n    return (\n        <SocialNavbar>\n            {\n                data.map(({url, imgUrl, altText}) => (\n                    <SocialOption url={url} imgUrl={imgUrl} altText={altText} key={altText} />\n                ))\n            }\n        </SocialNavbar>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Footer } from './components/Footer';\nimport { Hero } from './components/Hero';\nimport { Projects } from './components/Projects';\nimport { Skills } from './components/Skills';\nimport { Social } from './components/Social';\n\nexport const App = () => {\n  return (\n    <>\n      <Hero />\n      <Skills />\n      <Projects />\n      <Footer />\n      <Social />\n    </>\n  );\n}\n"],"sourceRoot":""}