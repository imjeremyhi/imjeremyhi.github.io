{"version":3,"sources":["components/Footer.tsx","components/DownArrow.tsx","components/Hero.tsx","components/NavBar.tsx","components/Carousel.tsx","components/Heading.tsx","components/Section.tsx","components/SubHeading.tsx","components/VisibilitySensor.tsx","components/Projects.tsx","components/About.tsx","components/ContactForm.tsx","components/Map.tsx","components/Contact.tsx","components/Social.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Wrapper","styled","footer","Author","div","Footer","Down","animated","img","isSmallWindow","DownArrow","divToScroll","showDownArrow","useSpring","y","setY","opacityProps","opacity","from","emptyDown","style","customDown","src","alt","onClick","current","offsetTop","reset","window","scrollY","onFrame","props","scroll","HeroWrapper","Overlay","HeroVideo","video","Row","Title","Subtitle","SmallTagline","OverlayContent","innerWidth","getTypedText","shouldShow","text","Style","cursor","hideWhenDoneDelay","hideWhenDone","Hero","resize","forceUpdate","userAgent","navigator","match","state","showTitle","showSubtitle","showTagline","setTimeout","setState","addEventListener","this","removeEventListener","id","playsinline","autoPlay","muted","type","Component","NavBar","Navbar","bg","expand","sticky","Brand","href","Toggle","Collapse","className","Nav","Link","Slider","projects","map","imgSrc","altText","data-src","key","HeadingText","h1","Heading","SectionWrapper","Section","children","SubHeadingText","h3","SubHeading","VisibilitySensor","active","once","otherProps","partialVisibility","onChange","isVisible","defaultProps","ProjectCategory","websiteData","url","layoverText","appData","WebProjects","delay","to","MobileProjects","Projects","ref","ColumnThird","Spacing","LargerSpacing","AboutContainer","SkillHeadingBox","SkillsGrouping","SkillColumn","colHeading","colRows","About","Input","input","TextArea","textarea","ContactForm","name","email","message","showSuccessAlert","showFailureAlert","handleChange","bind","handleSubmit","handleSuccessClose","handleFailureClose","event","target","placeholder","value","data","currentDate","Date","toString","fetch","method","headers","mode","body","JSON","stringify","rows","Button","variant","float","Snackbar","open","autoHideDuration","onClose","Alert","severity","Map","renderMarkers","maps","Marker","position","lat","center","lng","title","bootstrapURLKeys","defaultCenter","defaultZoom","zoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","ContactContainer","MapContainer","FormContainerSmall","FormContainerLarge","Contact","onLine","SocialNavbar","SocialImg","SocialSpacing","a","SocialOption","imgUrl","rel","Social","Main","App","React","createRef","Boolean","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.5b3cde7f.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrapper = styled.footer`\n    background-color: #2f2f2f;\n    width: 100%;\n    color: #ffffff;\n    text-align: center;\n    margin-top: 50px;\n`;\n\nconst Author = styled.div`\n    padding: 30px;\n`;\n\nexport const Footer = () => {\n    return (\n        <Wrapper>\n            <Author>\n                &copy; Jeremy Fu 2020\n            </Author>\n        </Wrapper>\n    );\n}","import React from 'react';\nimport { useSpring, animated } from 'react-spring'\nimport styled from 'styled-components';\n\ninterface Props {\n    isSmallWindow: boolean,\n    divToScroll: any,\n    showDownArrow: boolean,\n};\n\nconst Down: any = styled(animated.img)`\n    border-radius: 50%;\n    height: ${({ isSmallWindow }: any) => isSmallWindow ? '40px' : '80px'};\n    width: ${({ isSmallWindow }: any) => isSmallWindow ? '40px' : '80px'};\n`;\n\nexport const DownArrow = ({ isSmallWindow, divToScroll, showDownArrow }: Props) => {\n    const [, setY] = useSpring(() => ({ y: 0 }));\n    const opacityProps = useSpring({opacity: 1, from: {opacity: 0}})\n\n    const emptyDown = <Down isSmallWindow={isSmallWindow} style={{ opacity: 0 }} />;\n    const customDown = <Down \n        src=\"resources/down-arrow.png\" \n        alt=\"Down arrow\" \n        isSmallWindow={isSmallWindow} \n        onClick={() => {\n            setY({\n                // Div is a bit lower then where we want to scroll to\n                y: divToScroll.current.offsetTop - 70,\n                reset: true,\n                from: { y: window.scrollY },\n                // @ts-ignore\n                onFrame: props => window.scroll(0, props.y)\n            })\n        }}\n        style={opacityProps}\n    />\n\n    return showDownArrow ? customDown : emptyDown;\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Typist from 'react-typist';\nimport { DownArrow } from './DownArrow';\n\nconst video = './resources/personal-website-video.mp4';\n\nconst HeroWrapper = styled.div`\n    position: relative;\n`;\n\nconst Overlay = styled.div`\n    background-color: rgba(0,0,0,0.1);\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    text-align: center;\n    color: #ffffff;\n`;\n\nconst HeroVideo = styled.video`\n    height: auto;\n    vertical-align: middle;\n    width: 100%;\n`;\n\nconst Row = styled.div`\n    width: 100%;\n`;\n\nconst Title: any = styled.div`\n    font-size: ${({ isSmallWindow }: any) => isSmallWindow ? '2em' : '4em'};\n`;\n\nconst Subtitle: any = styled.div`\n    font-size: ${({ isSmallWindow }: any) => isSmallWindow ? '1.5em' : '2.5em'};\n    margin-bottom: 10px;\n`;\n\nconst SmallTagline: any = styled.div`\n    font-size: ${({ isSmallWindow }: any) => isSmallWindow ? '10px' : '15px'};\n    margin-bottom: 10px;\n`;\n\nconst OverlayContent: any = styled.div`\n    height: ${({ innerWidth }: any) => {\n        if (innerWidth < 1000) {\n            return '80%';\n        } else if (innerWidth < 1500) {\n            return '50%';\n        } else {\n            return '40%';\n        }\n    }};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    text-align: center;\n`;\n\ninterface Props {\n    divToScroll: any;\n};\n\ninterface State {\n    showTitle: boolean,\n    showSubtitle: boolean,\n    showTagline: boolean,\n    showDownArrow: boolean,\n};\n\nconst getTypedText = (shouldShow: boolean, text: string, Style: any, { isSmallWindow }: any) => {\n    return (\n        <Row>\n            <Style isSmallWindow={isSmallWindow}>\n                { shouldShow ? \n                    <Typist cursor={{ hideWhenDoneDelay: 0, hideWhenDone: true }}>\n                        {text}\n                    </Typist> : <span style={{ opacity: 0}}>Empty text</span>\n                }\n            </Style>\n        </Row>\n    );\n}\n\nexport class Hero extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showTitle: false,\n            showSubtitle: false,\n            showTagline: false,\n            showDownArrow: false,\n        };\n    }\n\n    resize = () => this.forceUpdate()\n\n    isSmallWindow = () => {\n        const { userAgent } = navigator;\n        const { innerWidth } = window;\n\n        return !!userAgent.match(/(iPhone|Android)/i) || innerWidth < 700;\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({\n                showTitle: true,\n            });\n        }, 3300);\n        setTimeout(() => {\n            this.setState({\n                showSubtitle: true,\n            });\n        }, 4300);\n        setTimeout(() => {\n            this.setState({\n                showTagline: true,\n            });\n        }, 6300);\n        setTimeout(() => {\n            this.setState({\n                showDownArrow: true,\n            });\n        }, 10000);\n\n        window.addEventListener('resize', this.resize)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    render() {\n        const { divToScroll } = this.props;\n        const { showTitle, showSubtitle, showTagline, showDownArrow } = this.state;\n\n        const { innerWidth } = window;\n        const isSmallWindow = this.isSmallWindow();\n\n        return (\n            <HeroWrapper id=\"home\">\n                <HeroVideo id = \"video\" playsinline autoPlay muted>\n                    <source src={video} type=\"video/mp4\" />\n                </HeroVideo>\n                <Overlay>\n                    <OverlayContent innerWidth={innerWidth}>\n                        {getTypedText(showTitle, 'Jeremy Fu', Title, { isSmallWindow })}\n                        {getTypedText(showSubtitle, 'I am a: developer', Subtitle, { isSmallWindow })}\n                        {getTypedText(showTagline, 'Welcome! Check out some of my work below :)', SmallTagline, { isSmallWindow })}\n                        <Row>\n                            <DownArrow isSmallWindow={isSmallWindow} divToScroll={divToScroll} showDownArrow={showDownArrow} />\n                        </Row>\n                    </OverlayContent>\n                </Overlay>\n            </HeroWrapper>\n        );\n    }\n}","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\n\nexport const NavBar = () => (\n    <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand href=\"#home\">Jeremy Fu</Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n            <Nav>\n                <Nav.Link href=\"#project\">Work</Nav.Link>\n                <Nav.Link href=\"#about\">About</Nav.Link>\n                <Nav.Link href=\"#contact\">Contact</Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n)","import React from \"react\";\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/src/styles.js';\n\nexport const Slider = ({projects}: any) => (\n  <AwesomeSlider>\n      {\n          projects.map(({imgSrc, altText}: any) => (\n            <div data-src={imgSrc} key={altText} />\n          ))\n      }\n  </AwesomeSlider>\n);","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeadingText = styled.h1`\n    text-align: center;\n    color: #aaaaaa; \n`;\n\nexport const Heading = ({ text }: { text: string}) => (\n    <HeadingText>{text}</HeadingText>\n)","import React from 'react';\nimport styled from 'styled-components';\n\nexport const SectionWrapper = styled.div`\n    text-align: center;\n    padding-top: 60px;\n`;\n\nexport const Section = ({ id, children }: { id: string, children: JSX.Element }) => (\n    <SectionWrapper id={id}>\n        {children}\n    </SectionWrapper>\n)","import React from 'react';\nimport styled from 'styled-components';\n\nconst SubHeadingText = styled.h3`\n    color: #aaaaaa;\n    margin-bottom: 1%;\n    padding-top: 3%;\n    text-align: center;\n`;\n\nexport const SubHeading = ({ text }: { text: string}) => (\n    <SubHeadingText>{text}</SubHeadingText>\n)","/* eslint-disable react/no-typos */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport VSensor from \"react-visibility-sensor\";\n\nclass VisibilitySensor extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      active: true\n    };\n  }\n\n  render() {\n    const { active } = this.state;\n    const { once, children, ...otherProps } = this.props;\n    return (\n      <VSensor\n        partialVisibility={true}\n        active={active}\n        onChange={isVisible => {\n          once &&\n            isVisible &&\n            this.setState({ active: false }, () =>\n              {}\n            );\n        }}\n        {...otherProps}\n      >\n        {({ isVisible }) => {\n            // @ts-ignore\n            return children({ isVisible })}\n        }\n      </VSensor>\n    );\n  }\n}\n\n// @ts-ignore\nVisibilitySensor.propTypes = {\n  children: PropTypes.func.isRequired,\n  once: PropTypes.bool\n};\n\n// @ts-ignore\nVisibilitySensor.defaultProps = {\n  once: false\n};\n\nexport default VisibilitySensor;\n","import React from 'react';\nimport { Spring } from \"react-spring/renderprops\";\nimport styled from 'styled-components';\nimport { Slider } from './Carousel';\nimport { Heading } from './Heading';\nimport { Section } from './Section';\nimport { SubHeading } from './SubHeading';\nimport VisibilitySensor from \"./VisibilitySensor\";\n\ninterface Props {\n    divToScroll: any;\n};\n\ninterface State {};\n\nconst ProjectCategory = styled.div`\n    clear: both;\n`;\n\nconst websiteData = [\n    {\n        url: \"https://internationalaom.com/\",\n        imgSrc: \"./resources/piano.png\",\n        layoverText: \"INTERNATIONAL AOM\",\n        altText: \"Piano teaching website\",\n    },\n    {\n        url: \"http://kiyobox.storenvy.com/\",\n        imgSrc: \"./resources/kiyo.png\",\n        layoverText: \"KIYO BOX\",\n        altText: \"Cosmetics website\",\n    },\n    {\n        url: \"https://www.alphatime.co/\",\n        imgSrc: \"./resources/alpha.png\",\n        layoverText: \"ALPHA TIME\",\n        altText: \"Dating coaching website\",\n    },\n    {\n        url: \"http://businessoneconsulting.org/\",\n        imgSrc: \"./resources/businessone.png\",\n        layoverText: \"BUSINESSONE CONSULTING UNSW\",\n        altText: \"UNSW BusinessOne website\",\n    },\n    {\n        url: \"http://unswbsoc.com/\",\n        imgSrc: \"./resources/bsoc.png\",\n        layoverText: \"BUSINESS SOCIETY UNSW\",\n        altText: \"UNSW business society website\",\n    },\n    {\n        url: \"\",\n        imgSrc: \"./resources/worldhax.png\",\n        layoverText: \"WORLDHAX BLOG Site No Longer Running\",\n        altText: \"Life blog website\",\n    },\n    {\n        url: \"http://www.gowntown.com.au/cufflinks/\",\n        imgSrc: \"./resources/gowntown.png\",\n        layoverText: \"GOWNTOWN\",\n        altText: \"Gowntown website\",\n    }\n];\n\nconst appData = [\n    {\n        url: \"https://itunes.apple.com/in/app/pocket-journal/id1078544961?mt=8\",\n        imgSrc: \"./resources/journal.png\",\n        layoverText: \"POCKET JOURNAL\",\n        altText: \"Journal app\",\n    },\n    {\n        url: \"https://itunes.apple.com/in/app/night-fx/id1083457773?mt=8\",\n        imgSrc: \"./resources/nightfx.png\",\n        layoverText: \"NIGHT FX\",\n        altText: \"Nightfx app\",\n    }\n];\n\nconst WebProjects = () => (\n    <VisibilitySensor once>\n        {({ isVisible }: any) => (\n            <Spring delay={500} to={{ opacity: isVisible ? 1 : 0 }}>\n                {({ opacity }) => \n                    <ProjectCategory style={{ opacity }}>\n                        <SubHeading text=\"Websites\" />\n                        <Slider projects={websiteData} />\n                    </ProjectCategory>\n                }\n            </Spring>\n        )}\n    </VisibilitySensor>\n)\n\nconst MobileProjects = () => (\n    <VisibilitySensor once>\n        {({ isVisible }: any) => (\n            <Spring delay={500} to={{ opacity: isVisible ? 1 : 0 }}>\n                {({ opacity }) => \n                    <ProjectCategory style={{ opacity }}>\n                        <SubHeading text=\"Mobile apps\" />\n                        <Slider projects={appData} />\n                    </ProjectCategory>\n                }\n            </Spring>\n        )}\n    </VisibilitySensor>\n)\n\nexport const Projects = ({ divToScroll } : Props) => (\n    <Section id=\"project\">\n        <div ref={divToScroll}>\n            <Heading text=\"Projects\" />\n            <WebProjects />\n            <MobileProjects />\n        </div>\n    </Section>\n);","import React from 'react';\nimport { Spring } from \"react-spring/renderprops\";\nimport styled from 'styled-components';\nimport { Heading } from './Heading';\nimport { Section } from './Section';\nimport VisibilitySensor from \"./VisibilitySensor\";\n\nconst ColumnThird = styled.div`\n    min-height: 1px;\n    width: 30%;\n`;\n\nconst Spacing = styled.div`\n    padding-top: 15px;\n`;\n\nconst LargerSpacing = styled.div`\n    padding-top: 30px;\n`;\n\nconst AboutContainer = styled.div`\n    width: 80%;\n    margin: auto;\n`;\n\nconst SkillHeadingBox = styled.div`\n    background: #9A8E5E;\n    text-align: center;\n    padding: 17px 0;\n    width: 100%;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    color: #fff;\n`;\n\nconst SkillsGrouping = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    align-content: center;\n    margin-top: 50px;\n`;\n\nconst SkillColumn = ({ colHeading, colRows }: { colHeading: string, colRows: Array<string> }) => (\n    <ColumnThird>\n        <SkillHeadingBox>\n            {colHeading}\n        </SkillHeadingBox>\n        <Spacing />\n        {\n            colRows.map(text => (\n                <p key={text}>{text}</p>\n            ))\n        }\n    </ColumnThird>\n);\n\nexport const About = () => (\n    <VisibilitySensor once>\n        {({ isVisible }: any) => (\n            <Spring delay={500} to={{ opacity: isVisible ? 1 : 0 }}>\n                {({ opacity }) => \n                    <Section id=\"about\">\n                        <div style={{ opacity }}>\n                            <Heading text=\"About\" />\n                            <LargerSpacing />\n                            <AboutContainer>\n                            <p>\n                                I'm a software engineer that has worked at well known companies such as Facebook and Atlassian. I have worked in front-end, back-end and platform roles. I spent my university days as an academic tutor and actively involved in the freelance space, helping university students get their start up ideas up and running. I'm willing to take on a wide range of different projects. If there's something you think I can help you with - please leave a message in the contact section.\n                            </p>\n                            </AboutContainer>\n                            <SkillsGrouping>\n                                <SkillColumn colHeading=\"Web\" colRows={[\"HTML, CSS & Jquery\", \"ExpressJS & ReactJS\", \"Wordpress\"]} />\n                                <SkillColumn colHeading=\"Mobile\" colRows={[\"Android Development with Java\", \"iOS Development with Swift\"]} />\n                                <SkillColumn colHeading=\"Software\" colRows={[\"Python\", \"NodeJS\", \"Java\"]} />\n                            </SkillsGrouping>\n                        </div>\n                    </Section>\n                }\n            </Spring>\n\n        )}\n    </VisibilitySensor>\n);","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Alert from '@material-ui/lab/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\ntype Props = {};\n\ntype State = {\n    name: string,\n    email: string,\n    message: string,\n    showSuccessAlert: boolean,\n    showFailureAlert: boolean\n};\n\nconst Input = styled.input`\n    width: 100%;\n    display: block;\n    height: 34px;\n    padding: 6px 12px;\n    font-size: 14px;\n    line-height: 1.42857143;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    margin-bottom: 15px;\n`;\n\nconst TextArea = styled.textarea`\n    width: 100%;\n    display: block;\n    padding: 6px 12px;\n    font-size: 14px;\n    line-height: 1.42857143;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    margin-bottom: 15px;\n`;\n\nconst NAME_PLACEHOLDER = 'Name';\nconst EMAIL_PLACEHOLDER = 'Email Address';\nconst MESSAGE_PLACEHOLDER = 'Send me a message';\n\nexport class ContactForm extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            showSuccessAlert: false,\n            showFailureAlert: false\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSuccessClose = this.handleSuccessClose.bind(this);\n        this.handleFailureClose = this.handleFailureClose.bind(this);\n    }\n  \n    handleChange(event: any) {\n        switch (event.target.placeholder) {\n            case NAME_PLACEHOLDER:\n                this.setState({\n                    name: event.target.value\n                });\n                break;\n            case EMAIL_PLACEHOLDER:\n                this.setState({\n                    email: event.target.value\n                });\n                break;\n            case MESSAGE_PLACEHOLDER:\n                this.setState({\n                    message: event.target.value\n                });\n        }\n    }\n\n    handleSuccessClose() {\n        this.setState({\n            showSuccessAlert: false\n        });\n    }\n\n    handleFailureClose() {\n        this.setState({\n            showFailureAlert: false\n        });\n    }\n  \n    async handleSubmit(event: any) {\n        const data = {\n            name: this.state.name,\n            email: this.state.email,\n            message: this.state.message,\n            currentDate: new Date().toString()\n        };\n        \n        const addRequestUrl = 'https://us-central1-personal-website-2c8eb.cloudfunctions.net/addRequest';\n        try {\n            await fetch(addRequestUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                mode: 'no-cors',\n                body: JSON.stringify(data)\n            });\n\n            this.setState({\n                showSuccessAlert: true\n            });\n        } catch (e) {\n            this.setState({\n                showFailureAlert: true\n            });\n        }\n    }\n  \n    render() {\n        const { name, email, message, showSuccessAlert, showFailureAlert } = this.state;\n\n        return (\n            <>\n                <Input type=\"text\" value={name} onChange={this.handleChange} placeholder={NAME_PLACEHOLDER} />\n                <Input type=\"text\" value={email} onChange={this.handleChange} placeholder={EMAIL_PLACEHOLDER} />\n                <TextArea rows={5} value={message} onChange={this.handleChange} placeholder={MESSAGE_PLACEHOLDER} />\n\n                <Button variant=\"success\" onClick={this.handleSubmit} style={{ float: 'right' }}>\n                    Submit\n                </Button>\n                <Snackbar open={showSuccessAlert} autoHideDuration={3000} onClose={this.handleSuccessClose}>\n                    <Alert onClose={this.handleSuccessClose} severity=\"success\">\n                        Thanks for your message!\n                    </Alert>\n                </Snackbar>\n                <Snackbar open={showFailureAlert} autoHideDuration={5000} onClose={this.handleFailureClose}>\n                    <Alert onClose={this.handleFailureClose} severity=\"warning\">\n                        Oops something went wrong! Please try again or at a later time \n                    </Alert>\n                </Snackbar>\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\ntype Props = {\n    center: {\n        lat: number,\n        lng: number,\n    },\n    zoom: number,\n};\n\nexport class Map extends Component<Props> {\n    static defaultProps = {\n        center: {\n            lat: -33.87,\n            lng: 151.21,\n        },\n        zoom: 11,\n    };\n\n    renderMarkers = (map: any, maps: any) => {\n        let marker = new maps.Marker(\n            {\n                position: { lat: this.props.center.lat, lng: this.props.center.lng },\n                map,\n                title: 'Hello World!'\n            }\n        );\n        return marker;\n    };\n\n    render() {\n        return (\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyDVVuiFRsGxb3A57LQ6rCxpcCV6BR-4bKM' }}\n                defaultCenter={this.props.center}\n                defaultZoom={this.props.zoom}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map, maps }) => this.renderMarkers(map, maps)}\n            />\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Spring } from \"react-spring/renderprops\";\nimport styled from 'styled-components';\nimport { ContactForm } from './ContactForm';\nimport { Heading } from './Heading';\nimport { Map } from './Map';\nimport { Section } from './Section';\nimport VisibilitySensor from \"./VisibilitySensor\";\n\nconst ContactContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    text-align: center;\n`;\n\nconst MapContainer = styled.div`\n    height: 50vh;\n    width: 40%;\n`;\n\nconst FormContainerSmall = styled.div`\n    width: 50%;\n`;\n\nconst FormContainerLarge = styled.div`\n    width: 80%\n`;\n\nexport class Contact extends Component {\n    resize = () => this.forceUpdate()\n\n    isSmallWindow = () => {\n        const { userAgent } = navigator;\n        const { innerWidth } = window;\n\n        return userAgent.match(/(iPhone|Android)/i) || innerWidth < 1100;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resize)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    render() {\n        return (\n            <VisibilitySensor once>\n                {({ isVisible }: any) => (\n                    <Spring delay={500} to={{ opacity: isVisible ? 1 : 0 }}>\n                        {({ opacity }) => \n                            <Section id=\"contact\">\n                                <div style={{ opacity }}>\n                                    <Heading text=\"Contact\" />\n                                    <ContactContainer>\n                                        {\n                                            // Throws an error if client is not connected to the internet\n                                            !this.isSmallWindow() && window.navigator.onLine  &&\n                                            <MapContainer>\n                                                <Map />\n                                            </MapContainer>\n                                        }\n                                        {\n                                            this.isSmallWindow() ? \n                                            <FormContainerLarge>\n                                                <ContactForm />\n                                            </FormContainerLarge> :\n                                            <FormContainerSmall>\n                                                <ContactForm />\n                                            </FormContainerSmall>\n                                        }\n                                    </ContactContainer>\n                                </div>\n                            </Section>\n                        }\n                    </Spring>\n                )}\n            </VisibilitySensor>\n        );\n    }\n};","import React from 'react';\nimport styled from 'styled-components';\n\nconst SocialNavbar = styled.div`\n    position: fixed;\n    bottom: 2%;\n    right: 2%; \n    z-index: 2; \n`;\n\nconst SocialImg = styled.img`\n    height: 40px;\n    width: 40px;\n`;\n\nconst SocialSpacing = styled.a`\n    padding: 5px;\n`;\n\nconst SocialOption = ({ url, imgUrl, altText }: { url: string, imgUrl: string, altText: string}) => (\n    <SocialSpacing href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <SocialImg src={imgUrl} alt={altText} />\n    </SocialSpacing>\n);\n\nconst data = [\n    {\n        url: \"https://github.com/imjeremyhi\",\n        imgUrl: \"resources/github.png\",\n        altText: \"Github link\",\n    },\n    {\n        url: \"https://au.linkedin.com/in/jeremyfu\",\n        imgUrl: \"resources/linkedin.png\",\n        altText: \"Linkedin link\",\n    },\n    {\n        url: \"mailto:imjeremyhi@gmail.com\",\n        imgUrl: \"resources/gmail.png\",\n        altText: \"Gmail link\",\n    },\n];\n\nexport const Social = () => {\n    return (\n        <SocialNavbar>\n            {\n                data.map(({url, imgUrl, altText}) => (\n                    <SocialOption url={url} imgUrl={imgUrl} altText={altText} key={altText} />\n                ))\n            }\n        </SocialNavbar>\n    );\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Footer } from './components/Footer';\nimport { Hero } from './components/Hero';\nimport { NavBar } from './components/NavBar';\nimport { Projects } from './components/Projects';\nimport { About } from './components/About';\nimport { Contact } from './components/Contact';\nimport { Social } from './components/Social';\n\nconst Main = styled.div`\n  font-family: 'Roboto', sans-serif;\n  background-color: #EDF1F5;\n`;\n\ninterface Props {\n};\n\ninterface State {};\n\nexport class App extends Component<Props, State> {\n    divToScroll: any;\n\n    constructor(props: Props) {\n        super(props);\n        \n        this.divToScroll = React.createRef();\n    }\n    \n    render() {\n        return (\n            <Main>\n            <NavBar />\n            <Hero divToScroll={this.divToScroll} />\n            <Projects divToScroll={this.divToScroll} />\n            <About />\n            <Contact />\n            <Footer />\n            <Social />\n            </Main>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}